
[tool.pdm]
includes = []
build = "build.py"

[tool.pdm.dev-dependencies]
dev = [
    "pytest",
    "flake8-bugbear>=19.8.0",
]

[build-system]
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"


[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
name = "pya2ldb"
authors = [
    {name = "Christoph Schueler", email = "cpu12.gems@googlemail.com"},
]
requires-python = ">=3.5,<4.0"
dependencies = [
    "antlr4-python3-runtime==4.11.1",
    "chardet",
    "Mako",
    "SQLAlchemy",
    "numpy",
    "scipy",
    "rich",
]
version = "0.12.93"
description = ""
readme="README.md"
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
license = {file = "LICENSE"}

#[project.entry_points.console_scripts]
[project.scripts]
a2ldb-imex = "pya2l.scripts.a2ldb_imex:main"

[project.urls]

[project.optional-dependencies]
[tool.pytest]
addopts = "--verbose --tb=short --junitxml=result.xml -o junit_family=xunit2"
testpaths = "pya2l/tests"

[tool.flake8]
ignore = ["D203", "E203", "E266", "E501", "W503", "F403", "F401", "BLK100"]
exclude = '''
/(
    \.git
    | __pycache__
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.eggs
    | _build
    | build
    | __pypackages__
    | docs
    | dist
    | experimental
    | pya2l/a2lLexer.py
    | pya2l/amlLexer.py
    | pya2l/amlParser.py
    | pya2l/a2llg.py
    | pya2l/a2lParser.py
)/
'''
max-complexity = 10
count = true
statistics = true
show-source = true
max-line-length = 132
select = ["B","C","E","F","W","T4","B9"]

[tool.black]
line-length=132
include = '\.pyi?$'
exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | __pypackages__
    | build
    | docs
    | experimental
    | __pycache__
    | pya2l/a2lLexer.py
    | pya2l/amlLexer.py
    | pya2l/amlParser.py
    | pya2l/a2llg.py
    | pya2l/a2lParser.py
    | dist
)/
'''

[tool.cibuildwheel.linux]
environment = { CLASSPATH="$PWD/antlr-4.11.1-complete.jar" }

[tool.cibuildwheel.macos]
environment = { CLASSPATH="$PWD/antlr-4.11.1-complete.jar" }

[tool.cibuildwheel.windows]
environment = { CLASSPATH="%PWD%/antlr-4.11.1-complete.jar" }

[tool.cibuildwheel]
build-verbosity = 3
build = "cp3{6,7,8,9,10,11}-*"
#test-command = "pytest -svv"
#build-frontend = "build"
#build-frontend = "pip"
before-build = [
    "python install_antlr.py"
]


version: 1.0.{build}

environment:
  COVERALLS_REPO_TOKEN:
    secure: DFqtaA1FWZtyjkWrLuWo0/fhZjHbiZaQoZw91SYpXhlTuQv08YfiRoL/rwvqDQh9
  CODACY_PROJECT_TOKEN:
    secure: Cx6jEa48Lx4/h9qiwR/N+0zsyf85D1rITrnG44XySbuiYPfg77ZS1wlkGx/B8zdM

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

      #- PYTHON: "C:\\Python34"
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python37"
      #- PYTHON: "C:\\Python34-x64"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36-x64"
    - PYTHON: "C:\\Python37-x64"

install:
  # We need wheel installed to build wheels
  - set PATH=%PYTHON%\Scripts;%PATH%
  - "%PYTHON%\\python.exe -m pip install --upgrade pip"
  - pip install wheel coveralls coverage codeclimate-test-reporter"
  - pip install -r requirements.txt
  - cmd: curl -O https://www.antlr.org/download/antlr-4.8-complete.jar
  - cmd: set CLASSPATH = "%APPVEYOR_BUILD_FOLDER%\antlr-4.8-complete.jar"
  - cmd: set CLASSPATH
  - cmd: set ANTLR_JAR = %CLASSPATH%
  - cmd: set ANTLR_JAR
  - cmd: dir
  - cmd: cd pya2l
  - cmd: cd ..



build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  # - "build.cmd %PYTHON%\\python.exe setup.py test"
  - "%PYTHON%\\Scripts\\coverage run --source=pya2l setup.py test"
  #- cmd: dir .

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - "%PYTHON%\\python.exe setup.py bdist_wheel"
  -  "%PYTHON%\\python.exe setup.py sdist --formats=zip,gztar"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

on_success:
  #- cmd: dir .
  #- cmd: set
  #- dir "%PYTHON%\\Scripts"
  - coverage xml
  - coveralls
  #- python-codacy-coverage -r coverage.xml

deploy:
- provider: GitHub
  artifact: '*.*'
  description: Test release -- do not use
  auth_token:
    secure: Wiweaot1JAHzV9mMZ3Zhn/5XUuLe5XYAyfpRZmWNpLW7fMW1FhAdoRliiAhz3Sv6
  draft: false
  prerelease: true
